{"version":3,"file":"static/js/250.11bd4d9d.chunk.js","mappings":"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","sources":["webpack://samurai-way/./src/components/profile/ui/profile-info/profile-info.module.css?4115","webpack://samurai-way/./src/components/profile/ui/profile-info/description/description.module.css?2c06","webpack://samurai-way/./src/shared/ui/profile-avatar/profile-avatar.module.css?9f8e","shared/ui/profile-avatar/profile-avatar.tsx","components/profile/ui/profile-info/description/profile-status/profile-status-hooks.tsx","components/profile/ui/profile-info/description/description.tsx","components/profile/ui/profile-info/profile-info.tsx","webpack://samurai-way/./src/components/profile/ui/my-posts/my-posts.module.css?a8d2","webpack://samurai-way/./src/components/profile/ui/my-posts/post/post.module.css?3666","webpack://samurai-way/./src/components/profile/ui/my-posts/posts-avatar/posts-avatar.module.css?339b","components/profile/ui/my-posts/posts-avatar/posts-avatar.tsx","components/profile/ui/my-posts/post/post.tsx","components/profile/ui/my-posts/my-posts.tsx","components/profile/ui/my-posts/my-posts-container.tsx","pages/profile-page.tsx","components/profile/ui/profile-container.tsx","webpack://samurai-way/./src/shared/ui/textarea/textarea.module.css?7bff","shared/ui/textarea/textarea.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"bg\":\"profile-info_bg__RdL5q\"};","// extracted by mini-css-extract-plugin\nexport default {\"description\":\"description_description__lRpeK\",\"info\":\"description_info__9sugq\",\"items_container\":\"description_items_container__zN1hs\",\"desc_sub_title\":\"description_desc_sub_title__72-kh\",\"desc_title\":\"description_desc_title__McVF0\",\"desc_items\":\"description_desc_items__42+7h\",\"desc_item\":\"description_desc_item__OBuDd\",\"avatar_changer\":\"description_avatar_changer__daLAR\"};","// extracted by mini-css-extract-plugin\nexport default {\"img\":\"profile-avatar_img__qNnCu\"};","import React from 'react';\r\nimport s from './profile-avatar.module.css';\r\nimport defaultAvatar from \"../../../assets/img/default-avatar.jpg\";\r\n\r\ntype ProfileAvatarPropsType = {\r\n  avatarUrl: string | null\r\n}\r\n\r\nexport const ProfileAvatar = (props: ProfileAvatarPropsType) => {\r\n    return (\r\n        <img className={s.img}\r\n             src={props.avatarUrl ? props.avatarUrl : defaultAvatar}\r\n             alt=\"profileAvatar\"/>\r\n    );\r\n};","import * as React from 'react';\r\nimport {ChangeEvent, useEffect, useState} from \"react\";\r\n\r\ntype ProfileStatusPropsType = {\r\n  status: string\r\n  updateStatusThunk: (status: string) => void\r\n}\r\n\r\nexport const ProfileStatusHooks = (props: ProfileStatusPropsType) => {\r\n  const [editMode, setEditMode] = useState<boolean>(false)\r\n  const [status, setStatus] = useState<string>(props.status)\r\n\r\n  useEffect(() => {\r\n    setStatus(props.status)\r\n  }, [props.status]);\r\n\r\n  const handleEditMode = () => {\r\n    if (!editMode){\r\n      setEditMode(true)\r\n    } else {\r\n      setEditMode(false)\r\n      props.updateStatusThunk(status)\r\n    }\r\n  }\r\n  const handleChangeStatus = (e: ChangeEvent<HTMLInputElement>) => {\r\n    setStatus(e.currentTarget.value)\r\n  }\r\n\r\n  return (\r\n      <div>\r\n        {!editMode\r\n            ?\r\n            <div>\r\n              <span onDoubleClick={handleEditMode}>{props.status || 'No status'}</span>\r\n            </div>\r\n            :\r\n            <div>\r\n              <input type=\"text\" onChange={handleChangeStatus} onBlur={handleEditMode} autoFocus\r\n                     value={status}/>\r\n            </div>\r\n        }\r\n      </div>\r\n  )\r\n}","import React, {ChangeEvent} from 'react';\r\nimport s from './description.module.css'\r\nimport {ProfileAvatar} from \"../../../../../shared/ui/profile-avatar/profile-avatar\";\r\nimport {ProfileType} from \"../../../../../shared/types\";\r\nimport {ProfileStatusHooks} from \"./profile-status/profile-status-hooks\";\r\n\r\ntype DescriptionType = {\r\n    profile: ProfileType\r\n    status: string\r\n    updateStatusThunk: (status: string) => void\r\n    isOwner: boolean\r\n    saveAvatar: (file: File) => void\r\n}\r\n\r\nexport const Description = (props: DescriptionType) => {\r\n\r\n    const handleAvatarSelect = (e: ChangeEvent<HTMLInputElement>) => {\r\n        if(e.target.files?.length){\r\n            props.saveAvatar(e.target.files[0])\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={s.description}>\r\n            <ProfileAvatar avatarUrl={props.profile.photos?.large}/>\r\n            <div className={s.info}>\r\n                {\r\n                    props.isOwner &&\r\n                    <div className={s.avatar_changer}>\r\n                        Change Avatar:\r\n                        <input type=\"file\" onChange={handleAvatarSelect}/>\r\n                    </div>\r\n                }\r\n                <ProfileStatusHooks status={props.status} updateStatusThunk={props.updateStatusThunk}/>\r\n                <div className={s.items_container}>\r\n                    <div className={s.desc_items}><strong className={s.desc_title}>Info:</strong>\r\n                        <div className={s.desc_item}><strong\r\n                            className={s.desc_sub_title}>Name: </strong>{props.profile.fullName}</div>\r\n                        <div className={s.desc_item}><strong className={s.desc_sub_title}>About\r\n                            Me: </strong>{props.profile.aboutMe}</div>\r\n                        <div className={s.desc_item}><strong className={s.desc_sub_title}>Looking For a\r\n                            Job: </strong> {props.profile.lookingForAJob ? 'Yes' : 'No'}</div>\r\n                        <div className={s.desc_item}><strong className={s.desc_sub_title}>Looking\r\n                            For: </strong>{props.profile.lookingForAJobDescription || 'No description'}\r\n                        </div>\r\n                    </div>\r\n                    <div className={s.desc_items}><strong className={s.desc_title}>Contacts:</strong>\r\n                        <div className={s.desc_item}>\r\n                            <strong className={s.desc_sub_title}>FaceBook: </strong>\r\n                            {props.profile.contacts.facebook ?\r\n                                <a href={props.profile.contacts.facebook}>{props.profile.contacts.facebook}</a> : 'No Link'}\r\n                        </div>\r\n                        <div className={s.desc_item}>\r\n                            <strong className={s.desc_sub_title}>WebSite: </strong>\r\n                            {props.profile.contacts.website ?\r\n                                <a href={props.profile.contacts.website}>{props.profile.contacts.website}</a> : 'No Link'}\r\n                        </div>\r\n                        <div className={s.desc_item}>\r\n                            <strong className={s.desc_sub_title}>VK: </strong>\r\n                            {props.profile.contacts.vk ?\r\n                                <a href={props.profile.contacts.vk}>{props.profile.contacts.vk}</a> : 'No Link'}\r\n                        </div>\r\n                        <div className={s.desc_item}>\r\n                            <strong className={s.desc_sub_title}>Twitter: </strong>\r\n                            {props.profile.contacts.twitter ?\r\n                                <a href={props.profile.contacts.twitter}>{props.profile.contacts.twitter}</a> : 'No Link'}\r\n                        </div>\r\n                        <div className={s.desc_item}>\r\n                            <strong className={s.desc_sub_title}>Inst: </strong>\r\n                            {props.profile.contacts.instagram ?\r\n                                <a href={props.profile.contacts.instagram}>{props.profile.contacts.instagram}</a> : 'No Link'}\r\n                        </div>\r\n                        <div className={s.desc_item}>\r\n                            <strong className={s.desc_sub_title}>YT: </strong>\r\n                            {props.profile.contacts.youtube ?\r\n                                <a href={props.profile.contacts.youtube}>{props.profile.contacts.youtube}</a> : 'No Link'}\r\n                        </div>\r\n                        <div className={s.desc_item}>\r\n                            <strong className={s.desc_sub_title}>github: </strong>\r\n                            {props.profile.contacts.github ?\r\n                                <a href={props.profile.contacts.github}>{props.profile.contacts.github}</a> : 'No Link'}\r\n                        </div>\r\n                        <div className={s.desc_item}>\r\n                            <strong className={s.desc_sub_title}>MainLink: </strong>\r\n                            {props.profile.contacts.mainLink ?\r\n                                <a href={props.profile.contacts.mainLink}>{props.profile.contacts.mainLink}</a> : 'No Link'}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};","import s from \"./profile-info.module.css\";\r\nimport {Description} from \"./description/description\";\r\nimport React from \"react\";\r\nimport {Preloader} from \"../../../../shared/ui/preloader/preloader\";\r\nimport {ProfileType} from \"../../../../shared/types\";\r\n\r\ntype ProfileInfoType = {\r\n  profile: ProfileType\r\n  status: string\r\n  updateStatusThunk: (status: string) => void\r\n  isOwner: boolean\r\n  saveAvatar: (file: File) => void\r\n}\r\n\r\nexport const ProfileInfo = (props: ProfileInfoType) => {\r\n  if (!props.profile) return <Preloader/>\r\n  return (\r\n      <>\r\n        <div className={s.bg}>\r\n          <img\r\n              src=\"https://i.ytimg.com/vi/yLRaDfPSB-4/hq720.jpg?sqp=-oaymwEhCK4FEIIDSFryq4qpAxMIARUAAAAAGAElAADIQj0AgKJD&rs=AOn4CLBJJjQdF_u5FifTIMKMDhilm3S0hA\"\r\n              alt=\"\"/>\r\n        </div>\r\n        <Description isOwner={props.isOwner} saveAvatar={props.saveAvatar} profile={props.profile} status={props.status} updateStatusThunk={props.updateStatusThunk}/>\r\n      </>\r\n  )\r\n}","// extracted by mini-css-extract-plugin\nexport default {\"posts\":\"my-posts_posts__hBxUP\",\"posts_wrapper\":\"my-posts_posts_wrapper__2K+UT\",\"new_post\":\"my-posts_new_post__tbvez\",\"btn_block\":\"my-posts_btn_block__6Ux0C\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"post_item__ff5TC\",\"post_text\":\"post_post_text__ZWYkx\"};","// extracted by mini-css-extract-plugin\nexport default {\"img\":\"posts-avatar_img__0o5ck\"};","import React from 'react';\r\nimport s from \"./posts-avatar.module.css\";\r\nimport defaultAvatar from '../../../../../assets/img/default-avatar.jpg'\r\n\r\ntype PostsAvatarPropsType = {\r\n  avatar: string | null\r\n}\r\n\r\nexport const PostsAvatar = (props: PostsAvatarPropsType) => {\r\n  return (\r\n      <img className={s.img}\r\n           src={!!props.avatar\r\n               ? props.avatar\r\n               : defaultAvatar}\r\n           alt=\"\"/>\r\n  );\r\n};","import React from 'react';\r\nimport s from \"./post.module.css\";\r\nimport {PostsAvatar} from \"../posts-avatar/posts-avatar\";\r\nimport {Button} from \"../../../../../shared/ui/button/button\";\r\n\r\ntype Props = {\r\n  message: string\r\n  likesCount: number\r\n  avatar: string | null\r\n}\r\n\r\nexport const Post = ({message, likesCount, ...props}: Props) => {\r\n  return (\r\n      <div className={s.item}>\r\n        <PostsAvatar avatar={props.avatar}/>\r\n        <div className={s.post_text}>{message}</div>\r\n        <Button onClick={() => {\r\n        }}>Like: <strong>{likesCount}</strong></Button>\r\n      </div>\r\n  );\r\n};","import React from 'react';\r\nimport s from \"./my-posts.module.css\";\r\nimport {Post} from \"./post/post\";\r\nimport {Button} from \"../../../../shared/ui/button/button\";\r\nimport {ProfilePageType} from \"../../../../shared/types\";\r\nimport {Field, InjectedFormProps, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../../shared/utils\";\r\nimport {Textarea} from \"../../../../shared/ui/textarea/textarea\";\r\nimport {FormDataType} from \"../../../../shared/types\";\r\n\r\ntype MyPostsType = {\r\n  addPost: (newPost: string) => void\r\n  profilePage: ProfilePageType\r\n  avatar: string | null\r\n}\r\n\r\n\r\n\r\nexport class MyPosts extends React.PureComponent<MyPostsType> {\r\n  shouldComponentUpdate(nextProps: Readonly<MyPostsType>, nextState: Readonly<{}>): boolean {\r\n    return nextProps != this.props || nextState != this.state\r\n  }\r\n  render() {\r\n    const postsList = this.props.profilePage.postsData\r\n        .map((post) => (\r\n            <Post key={post.id} message={post.message} avatar={this.props.avatar} likesCount={post.likes}/>\r\n        ))\r\n    const postsItems = this.props.profilePage.postsData.length ? postsList : <p>No posts. Lets post something!</p>\r\n\r\n    const handleAddPost = (values: FormDataType) => {\r\n      if (values.newPost) this.props.addPost(values.newPost)\r\n    }\r\n\r\n    return (\r\n        <div className={s.posts_wrapper}>\r\n          <h3>My Posts</h3>\r\n          <AddPostReduxForm onSubmit={handleAddPost}/>\r\n          <div className={s.posts}>\r\n            {postsItems}\r\n          </div>\r\n        </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst maxLength10 = maxLengthCreator(10)\r\n\r\nconst AddPostForm: React.FC<InjectedFormProps<FormDataType>> = (props) => {\r\n  return (\r\n      <form className={s.new_post} onSubmit={props.handleSubmit}>\r\n        <div>\r\n          <label>\r\n            <Field validate={[required, maxLength10]}\r\n                   name={'newPost'} placeholder={'Enter new post'} component={Textarea}/>\r\n          </label>\r\n        </div>\r\n        <div className={s.btn_block}>\r\n          <div>\r\n            <Button onClick={() => {\r\n            }}>Add Post</Button>\r\n          </div>\r\n          <div>\r\n            <Button onClick={() => {\r\n            }}>Clear</Button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n  )\r\n}\r\nconst AddPostReduxForm = reduxForm<FormDataType>({form: 'newPost'})(AddPostForm)","import {addPostAC} from \"../../model/profile-reducer\";\r\nimport {MyPosts} from \"./my-posts\";\r\nimport {connect} from \"react-redux\";\r\nimport {StateType} from \"../../../../shared/types\";\r\n\r\nlet mapStateToProps = (state: StateType) => {\r\n    return {\r\n        profilePage: state.profilePage,\r\n        avatar: state.profilePage.profile.photos.small\r\n    }\r\n}\r\n\r\nexport const MyPostsContainer = connect(mapStateToProps,{\r\n    addPost: addPostAC,\r\n})(MyPosts)","import React from \"react\";\r\nimport {ProfileInfo} from \"../components/profile/ui/profile-info/profile-info\";\r\nimport {MyPostsContainer} from \"../components/profile/ui/my-posts/my-posts-container\";\r\nimport {ProfileType} from \"../shared/types\";\r\n\r\ntype ProfilePageType = {\r\n  profile: ProfileType\r\n  status: string\r\n  updateStatusThunk: (status: string) => void\r\n  isOwner: boolean\r\n  saveAvatar: (file: File) => void\r\n}\r\n\r\nexport const ProfilePage = (props: ProfilePageType) => {\r\n  return (\r\n      <div>\r\n        <ProfileInfo isOwner={props.isOwner} saveAvatar={props.saveAvatar} profile={props.profile} status={props.status} updateStatusThunk={props.updateStatusThunk}/>\r\n        <MyPostsContainer/>\r\n      </div>\r\n  )\r\n}\r\n","import React from 'react';\r\nimport {ProfilePage} from \"../../../pages/profile-page\";\r\nimport {connect} from \"react-redux\";\r\nimport {ProfileType, StateType} from \"../../../shared/types\";\r\nimport {getUserProfileTC, getUserStatusTC, saveAvatarTC, updateStatusTC} from \"../model/profile-reducer\";\r\nimport {RouteComponentProps, withRouter} from \"react-router-dom\";\r\nimport {WithAuthRedirect} from \"../../../shared/hoc\";\r\nimport {compose} from \"redux\";\r\n\r\ninterface RouteParams {\r\n  userId: string\r\n}\r\n\r\ntype ProfileApiType = {\r\n  getUserProfileThunk: (userId: number) => void\r\n  profile: ProfileType\r\n  isAuth: boolean\r\n  getUserStatusThunk: (userId: number) => void\r\n  updateStatusThunk: (status: string) => void\r\n  userId: number\r\n  status: string\r\n  saveAvatar: (file: File) => void\r\n} & RouteComponentProps<RouteParams>\r\n\r\nexport class ProfileApiComponent extends React.Component<ProfileApiType> {\r\n  refreshProfile (){\r\n    let userId = parseInt(this.props.match.params.userId, 10);\r\n    if (!userId) {\r\n      userId = this.props.userId\r\n      if (!userId) this.props.history.push('/login')\r\n    }\r\n    this.props.getUserProfileThunk(userId)\r\n    this.props.getUserStatusThunk(userId)\r\n  }\r\n  componentDidMount() {\r\n    this.refreshProfile()\r\n  }\r\n  componentDidUpdate(prevProps: Readonly<ProfileApiType>, prevState: Readonly<{}>, snapshot?: any) {\r\n    if (prevProps.match.params.userId !== this.props.match.params.userId){\r\n      this.refreshProfile()\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return <ProfilePage {...this.props} saveAvatar={this.props.saveAvatar} isOwner={!this.props.match.params.userId} profile={this.props.profile}/>\r\n  }\r\n}\r\n\r\nlet mapStateToProps = (state: StateType) => ({\r\n  profile: state.profilePage.profile,\r\n  status: state.profilePage.status,\r\n  userId: state.auth.userId,\r\n  isAuth: state.auth.isAuth\r\n})\r\n\r\nconst ComposedComponent = compose<React.ComponentType>(\r\n    connect(mapStateToProps, {\r\n      getUserProfileThunk: getUserProfileTC,\r\n      getUserStatusThunk: getUserStatusTC,\r\n      updateStatusThunk: updateStatusTC,\r\n      saveAvatar: saveAvatarTC,\r\n    }),\r\n    withRouter,\r\n    WithAuthRedirect\r\n)(ProfileApiComponent)\r\n\r\nconst ProfileContainer= () => <ComposedComponent/>\r\nexport default ProfileContainer\r\n","// extracted by mini-css-extract-plugin\nexport default {\"textarea\":\"textarea_textarea__IfJNB\",\"error\":\"textarea_error__jFV-e\",\"error_text\":\"textarea_error_text__IOBRv\"};","import React, {forwardRef} from 'react';\r\nimport s from './textarea.module.css';\r\n\r\n\r\nexport const Textarea = forwardRef<HTMLTextAreaElement, any>(\r\n    ({input, meta, ...props}) => {\r\n\r\n      const isError = meta.touched && meta.error\r\n\r\n      return (\r\n          <div className={isError && s.error}>\r\n            <textarea className={s.textarea} {...input} {...props}/>\r\n            <div>\r\n              {isError && <span className={s.error_text}>{meta.error}</span>}\r\n            </div>\r\n          </div>\r\n      )\r\n    }\r\n)\r\n"],"names":["ProfileAvatar","props","className","s","src","avatarUrl","defaultAvatar","alt","ProfileStatusHooks","useState","editMode","setEditMode","status","setStatus","useEffect","handleEditMode","updateStatusThunk","type","onChange","e","currentTarget","value","onBlur","autoFocus","onDoubleClick","Description","profile","photos","large","isOwner","target","files","length","saveAvatar","fullName","aboutMe","lookingForAJob","lookingForAJobDescription","contacts","facebook","href","website","vk","twitter","instagram","youtube","github","mainLink","ProfileInfo","PostsAvatar","avatar","Post","message","likesCount","onClick","MyPosts","nextProps","nextState","this","state","postsList","profilePage","postsData","map","post","likes","id","postsItems","AddPostReduxForm","onSubmit","values","newPost","addPost","React","maxLength10","maxLengthCreator","reduxForm","form","handleSubmit","Field","validate","required","name","placeholder","component","Textarea","MyPostsContainer","connect","small","addPostAC","ProfilePage","ProfileApiComponent","userId","parseInt","match","params","history","push","getUserProfileThunk","getUserStatusThunk","refreshProfile","prevProps","prevState","snapshot","ComposedComponent","compose","auth","isAuth","getUserProfileTC","getUserStatusTC","updateStatusTC","saveAvatarTC","withRouter","WithAuthRedirect","forwardRef","input","meta","isError","touched","error"],"sourceRoot":""}