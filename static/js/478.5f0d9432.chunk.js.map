{"version":3,"file":"static/js/478.5f0d9432.chunk.js","mappings":"uKACA,GAAgB,QAAU,yBAAyB,cAAgB,+BAA+B,OAAS,wBAAwB,SAAW,0BAA0B,aAAe,+B,6BCAvL,EAAyB,4B,mCCUZA,EAAa,SAAC,GAAiC,IAAhCC,EAA+B,EAA/BA,GAAIC,EAA2B,EAA3BA,KAASC,GAAkB,YACjDC,EAAM,mBAAeH,GAE3B,OACI,UAAC,KAAD,CAASI,GAAID,EAAQE,UAAWC,EAAUC,gBAAiBC,EAAAA,OAA3D,WACI,SAAC,IAAD,CAAUC,UAAWP,EAAMQ,SAC1BT,M,oBCLPU,GAAoBC,E,QAAAA,KACtBC,EAAAA,EAAAA,KAPkB,SAACC,GACrB,MAAO,CACLC,YAAaD,EAAMC,gBAMnBC,EAAAA,EAFsBJ,ECDC,SAACV,GACxB,IAAMe,EAAmBf,EAAMa,YAAYG,iBACtCC,KAAI,SAACC,GAAD,OAAW,SAACrB,EAAD,CAA0BC,GAAIoB,EAAKpB,GAAIC,KAAMmB,EAAKnB,KAAMS,OAAQU,EAAKV,QAApDU,EAAKpB,OAGpCqB,EAAoBnB,EAAMa,YAAYG,iBAAiBI,OAASL,GAChE,kEAEN,OAAKf,EAAMqB,QAEP,gBAAKlB,UAAWC,EAAAA,cAAhB,SACKe,KAHiB,SAAC,KAAD,CAAUjB,GAAI,cDF/BoB,EAAwB,kBAAM,SAACb,EAAD,K,oBEhB3C,EAA0B,yBCKbc,EAAU,SAAC,GAAsB,IAArBC,EAAoB,EAApBA,QACrB,OACI,gBAAKrB,UAAWC,EAAhB,SAA4BoB,K,uCC8B9BC,GAAcC,EAAAA,EAAAA,GAAiB,IAkB/BC,GAAsBC,EAAAA,EAAAA,GAAkC,CAACC,KAAM,WAAzCD,EAhBgD,SAAC5B,GAC3E,OACI,kBAAM8B,SAAU9B,EAAM+B,aAAc5B,UAAWC,EAAAA,aAA/C,WACE,0BACE,4BACE,SAAC4B,EAAA,EAAD,CAAOC,SAAU,CAACC,EAAAA,EAAUT,GACrB1B,KAAM,UAAWoC,YAAa,oBAAqBC,UAAWC,EAAAA,SAGzE,0BACE,SAAC,IAAD,CAAQlC,UAAWC,EAAAA,oBAAuBkC,QAAS,aAAnD,0BCvCGC,GAAoB5B,EAAAA,EAAAA,KANX,SAACC,GACnB,MAAO,CACHC,YAAaD,EAAMC,eAI+B,CACtD2B,YAAaC,EAAAA,GADgB9B,EDOT,SAACX,GACvB,IAAOa,EAAeb,EAAfa,YAED6B,EAAe7B,EAAY8B,aAC5B1B,KAAI,SAACO,GAAD,OAAc,SAACD,EAAD,CAA0BC,QAASA,EAAQA,SAA7BA,EAAQ1B,OACvC8C,EAAgB/B,EAAY8B,aAAavB,OAASsB,GAClD,mEAMN,OACI,iBAAKvC,UAAWC,EAAAA,SAAhB,UACGwC,GACD,SAACjB,EAAD,CAAqBG,SAPL,SAACe,GACrB7C,EAAMwC,YAAYK,EAAOrB,kBEZ7B,EAToB,WAEhB,OACI,iBAAKrB,UAAWC,EAAAA,QAAhB,WACI,SAACkB,EAAD,KACA,SAACiB,EAAD,S,uFCVZ,EAA2B,2BAA3B,EAA8D,wBAA9D,EAAmG,6B,4BCGtFF,GAAWS,EAAAA,EAAAA,aACpB,YAA8B,IAA5BC,EAA2B,EAA3BA,MAAOC,EAAoB,EAApBA,KAAShD,GAAW,YAErBiD,EAAUD,EAAKE,SAAWF,EAAKG,MAErC,OACI,iBAAKhD,UAAW8C,GAAW7C,EAA3B,WACE,qCAAUD,UAAWC,GAAgB2C,GAAW/C,KAChD,yBACGiD,IAAW,iBAAM9C,UAAWC,EAAjB,SAAgC4C,EAAKG","sources":["webpack://samurai-way/./src/components/dialogs/ui/dialogs.module.css?4684","webpack://samurai-way/./src/components/dialogs/ui/dialog-items/dialog-item/dialog-item.module.css?d257","components/dialogs/ui/dialog-items/dialog-item/dialog-item.tsx","components/dialogs/ui/dialog-items/dialogs-items-container.tsx","components/dialogs/ui/dialog-items/dialog-items.tsx","webpack://samurai-way/./src/components/dialogs/ui/messages/message/message.module.css?5fc2","components/dialogs/ui/messages/message/message.tsx","components/dialogs/ui/messages/messages.tsx","components/dialogs/ui/messages/messages-container.tsx","pages/dialogs-page.tsx","webpack://samurai-way/./src/shared/ui/textarea/textarea.module.css?7bff","shared/ui/textarea/textarea.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"dialogs_dialogs__h0bqG\",\"dialogs_items\":\"dialogs_dialogs_items__KR20o\",\"active\":\"dialogs_active__YrDRD\",\"messages\":\"dialogs_messages__wjO1D\",\"send_message\":\"dialogs_send_message__5m7x4\"};","// extracted by mini-css-extract-plugin\nexport default {\"dialog\":\"dialog-item_dialog__VGVS8\"};","import {NavLink} from \"react-router-dom\";\r\nimport s from \"./dialog-item.module.css\";\r\nimport a from \"../../dialogs.module.css\"\r\nimport React from \"react\";\r\nimport {UserIcon} from \"../../../../../shared/ui/user-icon/user-icon\";\r\n\r\ntype Props = {\r\n    name: string\r\n    id: string\r\n    imgUrl: string\r\n}\r\nexport const DialogItem = ({id, name, ...props}: Props) => {\r\n    const pathId = `/dialogs/${id}`\r\n\r\n    return (\r\n        <NavLink to={pathId} className={s.dialog} activeClassName={a.active}>\r\n            <UserIcon avatarUrl={props.imgUrl}/>\r\n            {name}\r\n        </NavLink>\r\n    )\r\n}","import {connect} from \"react-redux\";\r\nimport {DialogItems} from \"./dialog-items\";\r\nimport {StateType} from \"../../../../shared/types\";\r\nimport {WithAuthRedirect} from \"../../../../shared/hoc\";\r\nimport {compose} from \"redux\";\r\n\r\nlet mapStateToProps = (state: StateType) => {\r\n  return {\r\n    dialogsPage: state.dialogsPage,\r\n  }\r\n}\r\n\r\nconst ComposedComponent = compose<React.ComponentType>(\r\n    connect(mapStateToProps),\r\n    WithAuthRedirect\r\n)(DialogItems)\r\n\r\nexport const DialogsItemsContainer = () => <ComposedComponent/>","import React from 'react';\r\nimport s from \"../dialogs.module.css\";\r\nimport {DialogItem} from \"./dialog-item/dialog-item\";\r\nimport {MessagesPageType} from \"../../../../shared/types/state-types\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\ntype Props = {\r\n    dialogsPage: MessagesPageType\r\n    isAuth: boolean\r\n}\r\n\r\nexport const DialogItems = (props: Props) => {\r\n    const usersDialogsList = props.dialogsPage.usersDialogsData\r\n        .map((user) => (<DialogItem key={user.id} id={user.id} name={user.name} imgUrl={user.imgUrl}/>))\r\n\r\n\r\n    const usersDialogsItems = props.dialogsPage.usersDialogsData.length ? usersDialogsList\r\n        : <p>No dialogs, you should find friends :)</p>\r\n\r\n    if (!props.isAuth) return <Redirect to={'/login'}/>\r\n    return (\r\n        <div className={s.dialogs_items}>\r\n            {usersDialogsItems}\r\n        </div>\r\n    );\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"message\":\"message_message__hD7qA\"};","import s from \"./message.module.css\";\r\nimport React from \"react\";\r\n\r\ntype Props = {\r\n    message: string\r\n}\r\nexport const Message = ({message}: Props) => {\r\n    return (\r\n        <div className={s.message}>{message}</div>\r\n    )\r\n}","import React from 'react';\r\nimport s from \"../dialogs.module.css\";\r\nimport {Button} from \"../../../../shared/ui/button/button\";\r\nimport {Message} from \"./message/message\";\r\nimport {MessagesPageType} from \"../../../../shared/types\";\r\nimport {Field, InjectedFormProps, reduxForm} from \"redux-form\";\r\nimport {Textarea} from \"../../../../shared/ui/textarea/textarea\";\r\nimport {maxLengthCreator, required} from \"../../../../shared/utils\";\r\n\r\ntype MessagesProps = {\r\n  messageSend: (message: string) => void\r\n  dialogsPage: MessagesPageType\r\n}\r\n\r\ntype NewMessageFormDataType = {\r\n  message: string\r\n}\r\n\r\nexport const Messages = (props: MessagesProps) => {\r\n  const {dialogsPage} = props\r\n\r\n  const messagesList = dialogsPage.messagesData\r\n      .map((message) => (<Message key={message.id} message={message.message}/>))\r\n  const messagesItems = dialogsPage.messagesData.length ? messagesList\r\n      : <p>No messages. Write smth to start dialog</p>\r\n\r\n  const addNewMessage = (values: NewMessageFormDataType) => {\r\n    props.messageSend(values.message)\r\n  }\r\n\r\n  return (\r\n      <div className={s.messages}>\r\n        {messagesItems}\r\n        <AddMessageReduxForm onSubmit={addNewMessage}/>\r\n      </div>\r\n  )\r\n}\r\n\r\nconst maxLength50 = maxLengthCreator(50)\r\n\r\nconst AddMessageForm: React.FC<InjectedFormProps<NewMessageFormDataType>> = (props) => {\r\n  return (\r\n      <form onSubmit={props.handleSubmit} className={s.send_message}>\r\n        <div>\r\n          <label>\r\n            <Field validate={[required, maxLength50]}\r\n                   name={'message'} placeholder={'Type your message'} component={Textarea}/>\r\n          </label>\r\n        </div>\r\n        <div>\r\n          <Button className={s.send_message_button} onClick={() => {\r\n          }}>Send</Button>\r\n        </div>\r\n      </form>\r\n  )\r\n}\r\nconst AddMessageReduxForm = reduxForm<NewMessageFormDataType>({form: 'message'})(AddMessageForm)","import {addMessageAC} from \"../../model/dialogs-reducer\";\r\nimport {connect} from \"react-redux\";\r\nimport {Messages} from \"./messages\";\r\nimport {StateType} from \"../../../../shared/types\";\r\n\r\nlet mapStateToProps = (state: StateType) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage\r\n    }\r\n}\r\n\r\nexport const MessagesContainer = connect(mapStateToProps, {\r\n    messageSend: addMessageAC\r\n})(Messages)","import React from 'react';\r\nimport s from '../components/dialogs/ui/dialogs.module.css'\r\nimport {DialogsItemsContainer} from \"../components/dialogs/ui/dialog-items/dialogs-items-container\";\r\nimport {MessagesContainer} from \"../components/dialogs/ui/messages/messages-container\";\r\n\r\n\r\nconst DialogsPage = () => {\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <DialogsItemsContainer/>\r\n            <MessagesContainer/>\r\n        </div>\r\n    )\r\n}\r\nexport default DialogsPage","// extracted by mini-css-extract-plugin\nexport default {\"textarea\":\"textarea_textarea__IfJNB\",\"error\":\"textarea_error__jFV-e\",\"error_text\":\"textarea_error_text__IOBRv\"};","import React, {forwardRef} from 'react';\r\nimport s from './textarea.module.css';\r\n\r\n\r\nexport const Textarea = forwardRef<HTMLTextAreaElement, any>(\r\n    ({input, meta, ...props}) => {\r\n\r\n      const isError = meta.touched && meta.error\r\n\r\n      return (\r\n          <div className={isError && s.error}>\r\n            <textarea className={s.textarea} {...input} {...props}/>\r\n            <div>\r\n              {isError && <span className={s.error_text}>{meta.error}</span>}\r\n            </div>\r\n          </div>\r\n      )\r\n    }\r\n)\r\n"],"names":["DialogItem","id","name","props","pathId","to","className","s","activeClassName","a","avatarUrl","imgUrl","ComposedComponent","compose","connect","state","dialogsPage","WithAuthRedirect","usersDialogsList","usersDialogsData","map","user","usersDialogsItems","length","isAuth","DialogsItemsContainer","Message","message","maxLength50","maxLengthCreator","AddMessageReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","validate","required","placeholder","component","Textarea","onClick","MessagesContainer","messageSend","addMessageAC","messagesList","messagesData","messagesItems","values","forwardRef","input","meta","isError","touched","error"],"sourceRoot":""}